% Generated by roxygen2 (4.0.2): do not edit by hand
\name{display_brewer}
\alias{display_brewer}
\alias{display_colours}
\title{Display a colour palette using pixel art.}
\usage{
display_brewer(palette, jitter = TRUE)

display_colours(colours, jitter = TRUE)
}
\arguments{
\item{palette}{A string corresponding to one of \code{RColorBrewer}'s
palettes.}

\item{jitter}{If \code{TRUE}, it will slightly perturb the colour of each
               pixel --- giving a nice mosaic effect --- by the value of the
               \code{invaders.default.jitter} option. You may also specify
               the jitter amount directly by passing a positive number.}

\item{colours}{A character vector of colours, either in \code{#rrggbb}
format or using one of R's built-in colour names.}
}
\value{
A ggplot object containing a plot of the colour palette.
}
\description{
Display a colour palette using pixel art.
}
\section{Details}{

Note that the \code{display_brewer} function cannot be used if the
\code{RColorBrewer} package is not installed.

Internally, the functions sample from the list of available sprites, so to
ensure reproducibility in your plots you may want to call \code{set.seed()}.
}
\examples{
# Using RColorBrewer's "Paired" palette. --------------- #
library(RColorBrewer)

cols <- brewer.pal(12, "Paired") # Define a colour vector.
display_colours(cols)

# Which precisely is equivalent to the following:
display_brewer("Paired")

# Manually defining a grayscale palette. --------------- #
cols <- c("#111111", "#333333", "#555555",
          "#777777", "#999999", "#BBBBBB")
display_colours(cols)
}

